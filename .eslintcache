[{"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\index.js":"1","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\App.js":"2","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\reportWebVitals.js":"3","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Row.js":"4","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\axios.js":"5","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\request.js":"6","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Banner.js":"7","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Nav.js":"8","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Search.js":"9","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\ResultCard.js":"10","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Favourites.js":"11","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Login.js":"12","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\StateProvider.js":"13","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\reducer.js":"14","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\firebase.js":"15","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Signup.js":"16","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\FavouriteCard.js":"17","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Footer.js":"18"},{"size":689,"mtime":1611011819666,"results":"19","hashOfConfig":"20"},{"size":2273,"mtime":1611108377503,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2618,"mtime":1610857677269,"results":"23","hashOfConfig":"20"},{"size":169,"mtime":1610684742624,"results":"24","hashOfConfig":"20"},{"size":869,"mtime":1611108066015,"results":"25","hashOfConfig":"20"},{"size":1663,"mtime":1611083857254,"results":"26","hashOfConfig":"20"},{"size":1890,"mtime":1611082925950,"results":"27","hashOfConfig":"20"},{"size":2434,"mtime":1611018506327,"results":"28","hashOfConfig":"20"},{"size":1954,"mtime":1611101111060,"results":"29","hashOfConfig":"20"},{"size":1933,"mtime":1611105449592,"results":"30","hashOfConfig":"20"},{"size":1954,"mtime":1611108539966,"results":"31","hashOfConfig":"20"},{"size":543,"mtime":1611011374697,"results":"32","hashOfConfig":"20"},{"size":679,"mtime":1611105043493,"results":"33","hashOfConfig":"20"},{"size":633,"mtime":1611016014498,"results":"34","hashOfConfig":"20"},{"size":2009,"mtime":1611114742082,"results":"35","hashOfConfig":"20"},{"size":1491,"mtime":1611105287024,"results":"36","hashOfConfig":"20"},{"size":234,"mtime":1611108300061,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1bxu73r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\index.js",[],["82","83"],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\App.js",["84","85","86","87"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport requests from \"./request\";\nimport Row from \"./Row\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport Favourites from \"./Favourites\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\nimport { auth, db } from \"./firebase\";\nimport Signup from \"./Signup\";\nimport Footer from \"./Footer\";\n\n\nfunction App() {\n\n  const [{ user, favourites }, dispatch] = useStateValue();\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      console.log(\"USER: \", authUser);\n      if (authUser) {\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        })\n      }\n      else {\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        })\n      }\n    })\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Router>\n\n        <Switch>\n\n          <Route path=\"/signup\">\n            <Signup/>\n          </Route>\n\n          <Route path=\"/favourites\">\n            <Nav/>\n            <Favourites/>\n          </Route>\n\n          <Route path=\"/search\">\n            <Nav/>\n            <Search/>\n          </Route>\n\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n\n          <Route path=\"/\">\n            <Nav/>\n            <Banner/>\n\n            <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} isMain/>\n            <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} />\n            <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n            <Row title=\"Romance\" fetchUrl={requests.fetchRomanceMovies} />\n            <Row title=\"Comedies\" fetchUrl={requests.fetchComedyMovies} />\n            <Row title=\"Action\" fetchUrl={requests.fetchActionMovies} />\n            <Row title=\"Adventure\" fetchUrl={requests.fetchAdventure} />\n            <Row title=\"Sci-fi\" fetchUrl={requests.fetchSciFi} />\n            <Row title=\"Animation\" fetchUrl={requests.fetchAnimation}/>\n            <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies} />\n\n            <Footer/>\n          </Route>\n        \n        </Switch> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\reportWebVitals.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Row.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\axios.js",[],["88","89"],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\request.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Banner.js",["90"],"import React, { useEffect, useState } from 'react';\r\nimport axios from \"./axios\";\r\nimport requests from \"./request\";\r\nimport \"./Banner.css\";\r\n\r\n\r\nfunction Banner() {\r\n\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchTrending);\r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \".....\" : str;\r\n    };\r\n\r\n    \r\n    return (\r\n        <header className=\"banner\" style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\",\r\n        }}>\r\n\r\n            <div className=\"banner_content\">\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name || movie?.original_title}</h1>    \r\n\r\n                <div className=\"banner_buttons\">\r\n                    <a target=\"_blank\" href={`https://www.themoviedb.org/search?query=${movie?.title || movie?.name || movie?.original_name || movie?.original_title}`}><button className=\"banner_button\">View on TheMovieDB</button></a>\r\n                </div>\r\n\r\n                <p className=\"banner_description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"banner_fade\"></div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Nav.js",["91"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Nav.css\";\r\nimport logo from \"./mylogo.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase';\r\n\r\nfunction Nav() {\r\n\r\n    const history = useHistory();\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [show, handleShow] = useState(false);\r\n    const handleAuth = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n            alert(\"SIGNED OUT SUCCESSFULLY!\");\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n    const handleFavourites = () => {\r\n        if (!user) {\r\n            alert(\"Please Login first to view favourites!\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            }\r\n            else {\r\n                handleShow(false);\r\n            }\r\n        });\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_dark\"}`}>\r\n            <Link to=\"/\">\r\n                <img className=\"nav_logo\" src={logo} alt=\"Logo\" />\r\n            </Link>\r\n            <div className=\"nav_content\">\r\n                <Link to={user!=null && \"/favourites\"}>\r\n                    <h3 className=\"favourites\" onClick={handleFavourites}>My Favourites</h3>\r\n                </Link>\r\n                <Link to=\"/search\">\r\n                    <button className=\"search_button\">Search</button>\r\n                </Link>\r\n                    <Link to={!user && \"/login\"}>\r\n                    <button className=\"login_button\" onClick={handleAuth}>{!user ? \"Login\" : \"Sign Out\"}</button>\r\n                    </Link>\r\n                    <p className=\"user_info\">{user ? user?.email : \"Hello Guest\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Search.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\ResultCard.js",["92","93"],"import React, { useEffect, useState } from 'react';\r\nimport \"./ResultCard.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction ResultCard({ movie }) {\r\n\r\n    const [{ user, favourites }, dispatch] = useStateValue();\r\n    \r\n    const addMovie = () => {\r\n        if (!user) {\r\n            alert(\"Please Login first to add movies!\");\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: \"ADD\",\r\n                movie: movie,\r\n            });\r\n        }\r\n    };\r\n\r\n    const addedMovie = favourites.find(mov => mov.id === movie.id);\r\n    const buttonDisabled = addedMovie ? true : false;\r\n    const themoviedb = () => {\r\n        window.open(`https://www.themoviedb.org/movie/${movie?.id}`, \"_blank\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"result-card\">\r\n            <div className=\"poster-wrapper\">\r\n                {movie?.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={`${movie?.title} Poster`}/>\r\n                ) : (\r\n                       <div className=\"filler-poster\"></div> \r\n                )}\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <div className=\"header\">\r\n                    <h2 className=\"title\">{movie?.title}</h2>\r\n                    <h4 className=\"release-date\">{movie.release_date ? movie?.release_date.substring(0, 4) : movie?.release_date}</h4>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                    <button className=\"btn\" onClick={themoviedb}>View On TheMovieDB</button>\r\n                    {buttonDisabled === false ? (<button className=\"btn\" onClick={addMovie} disabled={buttonDisabled}>+ Favourites</button>) : (\r\n                        <button className=\"btn\" onClick={addMovie} disabled={buttonDisabled}>Added</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultCard\r\n\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Favourites.js",["94","95"],"import React, { useEffect, useState } from 'react';\r\nimport FavouriteCard from './FavouriteCard';\r\nimport \"./Favourites.css\";\r\nimport { useStateValue } from './StateProvider';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\n\r\nfunction Favourites() {\r\n\r\n    const [{ favourites, user }, dispatch] = useStateValue();\r\n    const [button, setButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 200) {\r\n                setButton(true);\r\n            }\r\n            else {\r\n                setButton(false);\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const backToTop = () => {\r\n        document.documentElement.scrollTop = 0;\r\n        document.body.scrollTop = 0;\r\n    };\r\n\r\n    return (\r\n        <div className=\"myfavourites\">\r\n            <h1 className=\"favourite_page\">My Favourites <span className=\"length\">{favourites.length} {favourites.length === 1 ? \"Movie\" : \"Movies\"}</span></h1>\r\n            <div className=\"container\">\r\n                <div className=\"add-content\">\r\n\r\n                    {favourites.length > 0 ? (\r\n                        <ul className=\"results\">\r\n                            {favourites.map(result => (\r\n                                <li key={result.id}>\r\n                                    <FavouriteCard movie={result}/>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (<h2 className=\"no-movies\">Empty here... Use the Search button to add some movies!</h2>)}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <button className={button ? \"backTop\" : \"nobutton\"} onClick={backToTop}>\r\n                <div className=\"backtotop\">\r\n                    <ArrowUpwardIcon />\r\n                    <h3>Top</h3>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favourites\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Login.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\StateProvider.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\reducer.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\firebase.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Signup.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\FavouriteCard.js",["96"],"import React from 'react';\r\nimport \"./FavouriteCard.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction FavouriteCard({ movie }) {\r\n    const [{ favourites }, dispatch] = useStateValue();\r\n    const remove = () => {\r\n        dispatch({\r\n            type: \"REMOVE\",\r\n            id: movie.id,\r\n        })\r\n    };\r\n\r\n    const themoviedb = () => {\r\n        window.open(`https://www.themoviedb.org/movie/${movie?.id}`, \"_blank\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"result-card\">\r\n            <div className=\"poster-wrapper\">\r\n                {movie?.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={`${movie?.title} Poster`}/>\r\n                ) : (\r\n                       <div className=\"filler-poster\"></div> \r\n                )}\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <div className=\"header\">\r\n                    <h2 className=\"title\">{movie?.title}</h2>\r\n                    <h4 className=\"release-date\">{movie.release_date ? movie?.release_date.substring(0, 4) : movie?.release_date}</h4>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                    <button className=\"btn favourite_bt\" onClick={themoviedb}>View On TheMovieDB</button>\r\n                    <button className=\"btn favourite_bt\" onClick={remove}>-- Remove</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavouriteCard\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\netflix-clone\\src\\Footer.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":12,"column":16,"nodeType":"103","messageId":"104","endLine":12,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":19,"column":12,"nodeType":"103","messageId":"104","endLine":19,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":19,"column":18,"nodeType":"103","messageId":"104","endLine":19,"endColumn":28},{"ruleId":"107","severity":1,"message":"108","line":36,"column":6,"nodeType":"109","endLine":36,"endColumn":8,"suggestions":"110"},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":36,"column":21,"nodeType":"115","endLine":36,"endColumn":169},{"ruleId":"101","severity":1,"message":"116","line":11,"column":22,"nodeType":"103","messageId":"104","endLine":11,"endColumn":30},{"ruleId":"101","severity":1,"message":"117","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"118","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"105","line":10,"column":26,"nodeType":"103","messageId":"104","endLine":10,"endColumn":30},{"ruleId":"101","severity":1,"message":"116","line":10,"column":34,"nodeType":"103","messageId":"104","endLine":10,"endColumn":42},{"ruleId":"101","severity":1,"message":"106","line":6,"column":14,"nodeType":"103","messageId":"104","endLine":6,"endColumn":24},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'favourites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],["119"],["120"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},[909,911],"[dispatch]"]